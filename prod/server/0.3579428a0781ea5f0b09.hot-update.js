exports.id=0,exports.modules={"./src/server/server.js":function(e,o,n){"use strict";n.r(o);var s=n("./build/contracts/FlightSuretyApp.json"),t=n("./src/server/config.json"),l=n("web3"),r=n.n(l),c=n("express"),i=n.n(c);console.log("Checking to see what the server does at startup. Does it execute this console log line");var a=t.localhost,u=[],g=new r.a(new r.a.providers.WebsocketProvider(a.url.replace("http","ws"))),d=new g.eth.Contract(s.abi,a.appAddress),f=null;g.eth.getAccounts(function(e,o){console.log("Inside the getAccounts callback function"),e&&console.log(e),f=o[49],console.log("20 Addresses of accounts available for use from accts[10] to accts[29]");for(var n=function(e){var n,s,t;console.log(o[e]),n=o[e],s=function(n,s){!function(e,o){d.methods.getMyIndexes().call({from:e},function(e,n){o(e,n)})}(o[e],function(o,n){var s;u[e-10]=n,console.log(u[e-10]),29==e&&(s=function(e,o){},d.methods.getBalance().call({from:f},function(e,o){console.log("Inside the getAppBalance Function - Print App balance or error"),console.log(e,o),s(e,o)}))})},t=g.utils.toWei("1","ether"),d.methods.registerOracle().send({from:n,value:t,gas:a.gas},function(e,o){console.log("Inside the server.js file - registerOracle function"),console.log(e,o),s(e,o)})},s=10;s<30;s++)n(s)}),d.events.OracleRequest({fromBlock:0},function(e,o){e&&console.log(e),console.log("Inside the Server.js file and inside the OracleRequest() event listener on the server"),console.log(o),console.log("index = "+o.returnValues.index),console.log("airline = "+o.returnValues.airline),e?console.log("event emitted has an error - double check"):function(e){console.log("Inside the processOracleRequest function "),console.log("Current index and flight being processed = "+e.returnValues.index+e.returnValues.flight),console.log("Total Number of oracles registered on Blockchain = "+u.length)}(o)});var h=i()();h.get("/api",function(e,o){o.send({message:"An API for use with your Dapp!"})}),o.default=h}};